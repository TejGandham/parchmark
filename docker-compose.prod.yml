services:
  postgres:
    image: postgres:17.2-alpine
    container_name: parchmark-postgres-prod
    env_file:
      - ./.env.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U parchmark_user -d parchmark_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - proxiable

  backend:
    image: ghcr.io/tejgandham/parchmark-backend:latest
    container_name: parchmark-backend
    env_file:
      - ./backend/.env.production
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - proxiable
    labels:
      # Nginx Proxy Manager labels for API
      - "npm.enable=true"
      - "npm.host=assets-api.engen.tech"
      - "npm.port=8000"
      - "npm.proto=http"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    # Security: Read-only root filesystem
    read_only: true
    # Allow writing to /tmp for temporary files
    tmpfs:
      - /tmp
    # Security: Drop unnecessary capabilities
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  frontend:
    image: ghcr.io/tejgandham/parchmark-frontend:latest
    container_name: parchmark-frontend
    environment:
      - USE_HTTPS=false
    env_file:
      - ./ui/.env.production
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - proxiable
    labels:
      # Nginx Proxy Manager labels for automatic configuration
      - "npm.enable=true"
      - "npm.host=notes.engen.tech"
      - "npm.port=80"
      - "npm.proto=http"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

volumes:
  postgres_data:

networks:
  # Connect to existing proxiable network for Nginx Proxy Manager
  proxiable:
    external: true
    name: proxiable
  # Internal network for frontend-backend communication
  # parchmark-internal:
  #   driver: bridge
